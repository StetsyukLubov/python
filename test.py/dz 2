# def powers_of_two(N):
#     k = 0
#     result = 1

#     while result <= N:
#         print(result)
#         k += 1
#         result = 2 ** k

# #  Пример " 2 "
# N = int(input("Введите число N: "))
# powers_of_two(N)

# def powers_of_two_alternative(N):
#     powers = [2 ** k for k in range(int(N.bit_length())) if 2 ** k <= N]
#     return powers

# # Пример использования
# N = int(input("Введите число N: "))
# result = powers_of_two_alternative(N)
# print(result)


# def find_numbers(S, P):
#     for X in range(1, int(P**0.5) + 1):
#         if P % X == 0:
#             Y = P // X
#             if X + Y == S and X <= Y:
#                 print(X, Y)
                
                
def min_flips_to_make_all_heads_or_tails(coins):
    # Подсчет количества монеток с решкой вверх
    count_heads = sum(coins)

    # Количество монеток с гербом вверх
    count_tails = len(coins) - count_heads

    # Минимальное количество переворотов равно минимуму из решек и гербов
    min_flips = min(count_heads, count_tails)

    return min_flips

# Пример использования:
coins = [0, 1, 0, 1, 1]
result = min_flips_to_make_all_heads_or_tails(coins)
print(result)